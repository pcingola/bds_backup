
- Install starcluster
	$ sudo easy_install StarCluster
	
- Create key-pair
	$ starcluster createkey ec2keypair -o ~/.ssh/ec2keypair.rsa

- Coonfigure StarCluster

	- Configure starcluster AWS keys
		AWS_ACCESS_KEY_ID
		AWS_SECRET_ACCESS_KEY
		AWS_USER_ID

	- COnfigure keypair
		[key ec2keypair]
		KEY_LOCATION=~/.ssh/ec2keypair.rsa

	- Configure cluster
		DEFAULT_TEMPLATE=bdsDemo

		[cluster bdsDemo]
		KEYNAME = ec2keypair
		CLUSTER_SIZE = 8
		CLUSTER_USER = sgeadmin
		CLUSTER_SHELL = bash
		NODE_IMAGE_ID = ami-765b3e1f
		NODE_INSTANCE_TYPE = m1.large
		VOLUMES = bdsdata

	- Configure EBS volume

		[volume bdsdata]
		VOLUME_ID = vol-2185a46e
		MOUNT_PATH = /bdsdata

- Start cluster

	$ starcluster start bds

- Log into master node (as root)

	$ starcluster sshmaster bds

- Create a new volume and attach it (management console)

- Mount and export /bdsdata

	mkdir /bdsdata
	mkfs.ext4 /dev/xvdf
	mount /dev/xvdf /bdsdata

	echo "/bdsdata node001(async,no_root_squash,no_subtree_check,rw)" >> /etc/exports 
	exportfs -a

- Install script 

	cd /bdsdata
	./install.sh

		# - Install bds_pipeline data and tools
		# 
		#		wget http://www.mcb.mcgill.ca/~pcingola/bds_pipeline.tgz
		#		tar -xvzf bds_pipeline.tgz
		#
		# - Install go
		# 
		# 		apt-get install golang
		# 
		# - Install java 7 in all nodes
		# 
		# 		# Head node
		# 		add-apt-repository ppa:webupd8team/java
		# 		apt-get update
		# 		apt-get install oracle-java7-installer
		#
		# - Add PATH 
		# 
		# 	$ vi .bash_profile 
		# 
		# 		# User specific aliases and functions
		# 		alias l='ls -alh --color=auto'
		# 		alias psg='ps auxww | grep '
		# 		alias df='df -h'
		# 		alias less='less -S'
		# 		alias vi='vim'
		# 
		# 		# Tools
		# 		export PATH=$PATH:$HOME/tools/samtools
		# 		export PATH=$PATH:$HOME/tools/samtools/bcftools/
		# 		export PATH=$PATH:$HOME/tools/bwa
		# 		export PATH=$PATH:$HOME/tools/tabix
		# 
		# 		# BigDataScript
		# 		export PATH=$PATH:$HOME/.bds/
		#
		# - Download and compile bds
		# 
		# 		cd
		# 		mkdir workspace
		# 		git clone https://github.com/pcingola/BigDataScript.git
		# 		./scripts/install.sh

- Log into master node (as sgeasmin)

	$ starcluster sshmaster --user sgeadmin bds

	
- Terminate cluster

	 $ starcluster terminate bds


Other commands:

		The cluster is now ready to use. To login to the master node
		as root, run:

			$ starcluster sshmaster bds

		If you're having issues with the cluster you can reboot the
		instances and completely reconfigure the cluster from
		scratch using:

			$ starcluster restart bds

		When you're finished using the cluster and wish to terminate
		it and stop paying for service:

			$ starcluster terminate bds

		Alternatively, if the cluster uses EBS instances, you can
		use the 'stop' command to shutdown all nodes and put them
		into a 'stopped' state preserving the EBS volumes backing
		the nodes:

			$ starcluster stop bds

		WARNING: Any data stored in ephemeral storage (usually /mnt)
		will be lost!

		You can activate a 'stopped' cluster by passing the -x
		option to the 'start' command:

			$ starcluster start -x bds

		This will start all 'stopped' nodes and reconfigure the

