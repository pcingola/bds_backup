#-------------------------------------------------------------------------------
#
# Perform peak calling on several BAM files
#
#																Pablo Cingolani
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Parameters
#-------------------------------------------------------------------------------

string genome								# Genome name
string[] bam 								# List of bam files
string macs="$HOME/tools/macs/macs.sh"		# Path to MACS program

#-------------------------------------------------------------------------------
# Main
#-------------------------------------------------------------------------------

#---
# Sanity check: Command line arguments
#---
if( genome.isEmpty() || (bam.size() < 1)) {
	print("Usage: chipSeq.bds -genome genome.fasta -bam file_1.bam file_2.bam ... file_N.bam\n")
	exit 1
}

# Check that genome files exist
if( !genome.exists() ) {
	print("File '$genome' does not exists!\n");
	exit 1
}

# Check that each bam exists
for( string b : bam ) {
	if( ! b.exists() ) {
		print("File '$b' does not exists!\n");
		exit 1
	}
}

#-------------------------------------------------------------------------------
# Peak calling
#-------------------------------------------------------------------------------

int genomeLen

#---
# Run MACS on each BAM file
#---
for( string b : bam ) {
	string name = b.pathName() + "/" + baseNoExt(b)
	string xls = name + "_peaks.xls"

	# Do we need to invoke a peak caller for this BAM?
	if( xls <- b ) {
		print("\nCalling peaks:\n\tName: $name\n\tBam file: $b\n")

		# Do we need to calculate genome length?
		if( genomeLen <= 0 )	genomeLen = genomeLength( genome )

		# Schedule task
		task $macs -t $b -n $name -g $genomeLen
	}
}

wait

#---
# Convert BAM to BED
#---

for( string b : bam ) {
	string bed = b.pathName() + "/" +  b.baseName(".bam") + ".bed"
	print("\nConvert BAM to BED: $bed\n")
	task( bed <- bam ) {
		sys bamToBed -i $b | cut -f 1,2,3,6 > $bed
	}
}

wait
exit 0

#-------------------------------------------------------------------------------
# Get base file name and no file extentions
#-------------------------------------------------------------------------------
string baseNoExt(string file) {
	file = file.baseName()
	while( file.extName() != "" )	file = file.baseName( "." + file.extName() )
	return file
}

#-------------------------------------------------------------------------------
# Calculate genome length (from a FASTA file)
#-------------------------------------------------------------------------------
int genomeLength(string genome) {
	print("Calculating genome length from fasta file $genome\n")

	# Calculate number of bases in a fasta file
	string lid
	if( genome.endsWith(".gz") )	lid = sys gunzip -c $genome | grep -v "^>" | tr -d "\n" | wc -c
	else							lid = sys cat $genome | grep -v "^>" | tr -d "\n" | wc -c

	# Parse number 
	int genomeLen = lid.stdout().parseInt()
	print("Genome $genome is $genomeLen bases long\n")

	# Sanity check
	if( genomeLen <= 0 ) {
		print("Error: Non positive genome length. This should never happen!\n")
		exit 1
	}

	return genomeLen
}

